{"version":3,"file":"static/js/649.7ed86864.chunk.js","mappings":"0SAIaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4PAaJE,EAAQF,EAAAA,GAAAA,EAAH,iOAWLG,EAAeH,EAAAA,GAAAA,IAAH,kFAMZI,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAkB,CAC5C,sBAAuB,CACrBM,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,SAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,c,8BCzCbC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,SAAS,oBAC5BC,MAAOJ,EAAAA,KACJI,MAAM,0BACNC,QAAQ,mBAAoB,4CAC5BF,SAAS,qBACZG,SAAUN,EAAAA,KACPG,SAAS,wBACTI,IAAI,EAAG,+CACPF,QAAQ,QAAS,sCAGTG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEXJ,GACJK,EAAAA,EAAAA,IAAS,CACPZ,KAAMU,EAAOV,KACbE,MAAOQ,EAAOR,MACdE,SAAUM,EAAON,YANJ,sDAUjBS,QAAQC,IAAI,KAAMC,SAVD,OAYnBJ,IAZmB,yDAAH,wDAgBlB,OACE,SAAC,KAAD,CACEK,cAHkB,CAAEhB,KAAM,GAAIE,MAAO,GAAIE,SAAU,IAInDP,iBAAkBA,EAClBoB,SAAUR,EAHZ,SAKG,gBAAGS,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,aAApB,OACC,UAACjC,EAAD,YACE,SAACG,EAAD,6CACA,SAAC,KAAD,CACE+B,GAAI7B,EACJ8B,MAAM,WACNC,KAAK,OACLvB,KAAK,OACLC,UAAQ,IAETiB,EAAOlB,MAAQmB,EAAQnB,MACtB,SAACT,EAAD,UAAe2B,EAAOlB,OACpB,MACJ,SAAC,KAAD,CACEqB,GAAI7B,EACJ8B,MAAM,QACNC,KAAK,QACLvB,KAAK,QACLC,UAAQ,IAETiB,EAAOhB,OAASiB,EAAQjB,OACvB,SAACX,EAAD,UAAe2B,EAAOhB,QACpB,MAEJ,SAAC,KAAD,CACEmB,GAAI7B,EACJ8B,MAAM,WACNC,KAAK,WACLvB,KAAK,WACLC,UAAQ,IAGTiB,EAAOd,UAAYe,EAAQf,UAC1B,SAACb,EAAD,UAAe2B,EAAOd,WACpB,MACJ,SAACoB,EAAA,EAAD,CACEC,QAAQ,YACRF,KAAK,SACLG,SAAUN,EACVO,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,MAAO,IACPpC,MAAO,QACPqC,gBAAiB,UACjBnC,YAAa,WAVjB,SAaGwB,GAAe,SAACY,EAAA,EAAD,IAAa,cAhDlC,GAsDN,EChGc,SAASC,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC5B,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\nimport { Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  max-width: 450px;\n  padding: 40px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n  background-color: rgb(255, 255, 255);\n`;\n\nexport const Title = styled.p`\n  position: relative;\n  text-align: center;\n  color: #00bfa5;\n  font-family: 'freight-big-pro';\n  font-size: 35px;\n  font-weight: normal;\n  letter-spacing: -1.5px;\n  overflow-wrap: break-word;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  margin-left: 5px;\n  margin-top: -15px;\n`;\n\nexport const CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: '#00bfa5',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'black',\n    },\n    '&:hover fieldset': {\n      borderColor: '#69f0ae',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#00bfa5',\n    },\n  },\n});\n","import { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport { CssTextField, Title, ErrorMessage, Form } from './RegisterForm.styled';\nimport { Loader } from '../Loader/Loader';\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .matches(/^[a-zA-Z0-9@.]+$/, 'Email must contain only Latin characters')\n    .required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(\n        register({\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n    resetForm();\n  };\n\n  const initialValues = { name: '', email: '', password: '' };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <Title>Fill out the form to register</Title>\n          <Field\n            as={CssTextField}\n            label=\"Username\"\n            type=\"text\"\n            name=\"name\"\n            required\n          />\n          {errors.name && touched.name ? (\n            <ErrorMessage>{errors.name}</ErrorMessage>\n          ) : null}\n          <Field\n            as={CssTextField}\n            label=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n          {errors.email && touched.email ? (\n            <ErrorMessage>{errors.email}</ErrorMessage>\n          ) : null}\n\n          <Field\n            as={CssTextField}\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            required\n          />\n\n          {errors.password && touched.password ? (\n            <ErrorMessage>{errors.password}</ErrorMessage>\n          ) : null}\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            disabled={isSubmitting}\n            style={{\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              width: 120,\n              color: 'black',\n              backgroundColor: '#64ffda',\n              borderColor: '#00bfa5',\n            }}\n          >\n            {isSubmitting ? <Loader /> : 'Sign Up'}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n// import { register } from 'redux/auth/operations';\n// import { useDispatch } from 'react-redux';\n// import { CssTextField, Title } from './RegisterForm.styled';\n// import Button from '@mui/material/Button';\n// import Box from '@mui/material/Box';\n\n// export const RegisterForm = () => {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n\n//     const nameValue = form.elements.name.value;\n//     const emailValue = form.elements.email.value;\n//     const passwordValue = form.elements.password.value;\n\n//     dispatch(\n//       register({\n//         name: nameValue,\n//         email: emailValue,\n//         password: passwordValue,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <Box\n//       component=\"form\"\n//       sx={{\n//         '& > :not(style)': { m: 1, width: '30ch' },\n//         display: 'flex',\n//         flexDirection: 'column',\n//         alignItems: 'center',\n//         maxWidth: 350,\n//         marginRight: 'auto',\n//         marginLeft: 'auto',\n//         padding: '20px',\n//         borderRadius: '4px',\n//         backgroundColor: '#eeefe740',\n//         boxShadow:\n//           'rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px',\n//       }}\n//       noValidate\n//       autoComplete=\"off\"\n//       onSubmit={handleSubmit}\n//     >\n//       <Title>Fill out the form to register</Title>\n//       <CssTextField label=\"Username\" type=\"text\" name=\"name\" required />\n//       <CssTextField label=\"Email\" type=\"email\" name=\"email\" required />\n\n//       <CssTextField label=\"Password\" type=\"password\" name=\"password\" required />\n\n//       <Button\n//         variant=\"contained\"\n//         type=\"submit\"\n//         style={{\n//           color: 'black',\n//           backgroundColor: '#64ffda',\n//           borderColor: '#00bfa5',\n//           maxWidth: 120,\n//         }}\n//       >\n//         Sign Up\n//       </Button>\n//     </Box>\n//   );\n// };\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","Title","ErrorMessage","CssTextField","TextField","color","borderBottomColor","borderColor","validationSchema","Yup","shape","name","required","email","matches","password","min","RegisterForm","dispatch","useDispatch","handleSubmit","values","resetForm","register","console","log","message","initialValues","onSubmit","errors","touched","isSubmitting","as","label","type","Button","variant","disabled","style","marginLeft","marginRight","width","backgroundColor","Loader","Register","Helmet"],"sourceRoot":""}