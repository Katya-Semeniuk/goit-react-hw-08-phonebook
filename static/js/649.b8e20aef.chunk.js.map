{"version":3,"file":"static/js/649.b8e20aef.chunk.js","mappings":"sOAEaA,EAAoB,WAC/BC,EAAAA,GAAAA,QAAc,+BACf,EAEYC,EAAyB,WACpCD,EAAAA,GAAAA,MAAY,4BACb,EAEYE,EAAkB,WAC7BF,EAAAA,GAAAA,MAAY,sBACb,C,qICTYG,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAkB,CAC5C,sBAAuB,CACrBE,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,OAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAKNC,EAAQL,EAAAA,GAAAA,EAAH,2M,wCChBLM,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAsBjB,OACE,UAACC,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,kBAAmB,CAAEC,EAAG,EAAGC,MAAO,QAClCC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,SAAU,IACVC,YAAa,OACbC,WAAY,OACZC,QAAS,OACTC,aAAc,MACdC,gBAAiB,YACjBC,UACE,wEAEJC,YAAU,EACVC,aAAa,MACbC,SAvCiB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAETC,EAAYF,EAAKG,SAASC,KAAKC,MAC/BC,EAAaN,EAAKG,SAASI,MAAMF,MACjCG,EAAgBR,EAAKG,SAASM,SAASJ,MACxCH,GAAcI,GAAeE,IAChCxC,EAAAA,EAAAA,MAEFU,GACEgC,EAAAA,EAAAA,IAAS,CACPN,KAAMF,EACNK,MAAOD,EACPG,SAAUD,KAGdR,EAAKW,OACN,EAGC,WAoBE,SAACnC,EAAD,6CACA,SAACN,EAAD,CAAc0C,MAAM,WAAWC,KAAK,OAAOT,KAAK,OAAOU,UAAQ,KAC/D,SAAC5C,EAAD,CAAc0C,MAAM,QAAQC,KAAK,QAAQT,KAAK,QAAQU,UAAQ,KAE9D,SAAC5C,EAAD,CAAc0C,MAAM,WAAWC,KAAK,WAAWT,KAAK,WAAWU,UAAQ,KAEvE,SAACC,EAAA,EAAD,CACEC,QAAQ,YACRH,KAAK,SACLI,MAAO,CACL5C,MAAO,QACPoB,gBAAiB,UACjBlB,YAAa,UACba,SAAU,KAPd,uBAcL,ECpEc,SAAS8B,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAAC1C,EAAD,MAGL,C","sources":["components/Notification/Notification.jsx","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const notCorrectContact = () => {\n  toast.warning('Write correct name or number');\n};\n\nexport const notCorrectRegistration = () => {\n  toast.error('The filds cannot be empty');\n};\n\nexport const notCorrectLogIn = () => {\n  toast.error('Complete the fields');\n};\n","import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nexport const CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: '#00bfa5',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'red',\n    },\n    '&:hover fieldset': {\n      borderColor: '#69f0ae',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#00bfa5',\n    },\n  },\n});\n\nexport const Title = styled.p`\n  text-align: center;\n  color: #00bfa5;\n  font-family: 'freight-big-pro';\n  font-size: 35px;\n  font-weight: normal;\n  letter-spacing: -1.5px;\n  overflow-wrap: break-world;\n`;\n","import { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { CssTextField, Title } from './RegisterForm.styled';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport { notCorrectRegistration } from '../Notification/Notification';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    const nameValue = form.elements.name.value;\n    const emailValue = form.elements.email.value;\n    const passwordValue = form.elements.password.value;\n    if (!nameValue || !emailValue || !passwordValue) {\n      notCorrectRegistration();\n    }\n    dispatch(\n      register({\n        name: nameValue,\n        email: emailValue,\n        password: passwordValue,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1, width: '30ch' },\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        maxWidth: 350,\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        padding: '20px',\n        borderRadius: '4px',\n        backgroundColor: '#eeefe740',\n        boxShadow:\n          'rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px',\n      }}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <Title>Fill out the form to register</Title>\n      <CssTextField label=\"Username\" type=\"text\" name=\"name\" required />\n      <CssTextField label=\"Email\" type=\"email\" name=\"email\" required />\n\n      <CssTextField label=\"Password\" type=\"password\" name=\"password\" required />\n\n      <Button\n        variant=\"contained\"\n        type=\"submit\"\n        style={{\n          color: 'black',\n          backgroundColor: '#64ffda',\n          borderColor: '#00bfa5',\n          maxWidth: 120,\n        }}\n      >\n        Sign Up\n      </Button>\n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["notCorrectContact","toast","notCorrectRegistration","notCorrectLogIn","CssTextField","styled","TextField","color","borderBottomColor","borderColor","Title","RegisterForm","dispatch","useDispatch","Box","component","sx","m","width","display","flexDirection","alignItems","maxWidth","marginRight","marginLeft","padding","borderRadius","backgroundColor","boxShadow","noValidate","autoComplete","onSubmit","e","preventDefault","form","currentTarget","nameValue","elements","name","value","emailValue","email","passwordValue","password","register","reset","label","type","required","Button","variant","style","Register","Helmet"],"sourceRoot":""}