{"version":3,"file":"static/js/628.f7b54fb9.chunk.js","mappings":"gSAKaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4PAaJE,EAAQF,EAAAA,GAAAA,EAAH,oNASLG,EAAeH,EAAAA,GAAAA,IAAH,kFAMZI,GAAeJ,EAAAA,EAAAA,IAAOK,EAAAA,EAAPL,CAAkB,CAC5C,sBAAuB,CACrBM,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,SAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,c,8BCxCbC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KACJE,MAAM,0BACNC,QAAQ,mBAAoB,4CAC5BC,SAAS,qBACZC,SAAUL,EAAAA,KACPI,SAAS,wBACTE,IAAI,EAAG,+CACPH,QAAQ,QAAS,sCAGTI,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEXJ,GACJK,EAAAA,EAAAA,IAAM,CACJX,MAAOS,EAAOT,MACdG,SAAUM,EAAON,YALJ,sDASjBS,QAAQC,IAAI,KAAMC,SATD,OAWnBJ,IAXmB,yDAAH,wDAclB,OACE,SAAC,KAAD,CACEK,cAHkB,CAAEf,MAAO,GAAIG,SAAU,IAIzCN,iBAAkBA,EAClBmB,SAAUR,EAHZ,SAKG,gBAAGS,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,aAApB,OACC,UAAChC,EAAD,CAAMiC,aAAa,MAAnB,WACE,SAAC9B,EAAD,sCAEA,SAAC,KAAD,CACE+B,GAAI7B,EACJ8B,MAAM,QACNC,KAAK,QACLC,KAAK,QACLtB,UAAQ,IAETe,EAAOjB,OAASkB,EAAQlB,OACvB,SAACT,EAAD,UAAe0B,EAAOjB,QACpB,MAEJ,SAAC,KAAD,CACEqB,GAAI7B,EACJ8B,MAAM,WACNC,KAAK,WACLC,KAAK,WACLtB,UAAQ,IAETe,EAAOd,UAAYe,EAAQf,UAC1B,SAACZ,EAAD,UAAe0B,EAAOd,WACpB,MAEJ,SAACsB,EAAA,EAAD,CACEC,SAAUP,EACVQ,QAAQ,YACRJ,KAAK,SACLK,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAU,IACVrC,MAAO,QACPsC,gBAAiB,UACjBpC,YAAa,WAVjB,SAaGuB,EAAe,gBAAkB,aAvCvC,GA6CN,ECpFc,SAASc,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAC7B,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport TextField from '@mui/material/TextField';\n\nimport { Form as FormikForm } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  max-width: 450px;\n  padding: 40px;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 8px;\n  background-color: rgb(255, 255, 255);\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  color: #00bfa5;\n  font-size: 25px;\n  font-family: 'lato', sans-serif;\n  font-weight: 700;\n  @include text-shadow(longshadow(darken($bg, 30%), $bg, 50, 0.5));\n`;\n\nexport const ErrorMessage = styled.div`\n  color: red;\n  margin-left: 5px;\n  margin-top: -15px;\n`;\n\nexport const CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: '#00bfa5',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: 'black',\n    },\n    '&:hover fieldset': {\n      borderColor: '#69f0ae',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#00bfa5',\n    },\n  },\n});\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { CssTextField, Title, Form, ErrorMessage } from './LoginForm.styled';\nimport Button from '@mui/material/Button';\n\nimport { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('This is an ERROR email')\n    .matches(/^[a-zA-Z0-9@.]+$/, 'Email must contain only Latin characters')\n    .required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be at least 6 characters long')\n    .matches(/^\\S*$/, 'Password must not contain spaces'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    try {\n      await dispatch(\n        logIn({\n          email: values.email,\n          password: values.password,\n        })\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n    resetForm();\n  };\n  const initialValues = { email: '', password: '' };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form autoComplete=\"off\">\n          <Title>Log in to your account</Title>\n\n          <Field\n            as={CssTextField}\n            label=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            required\n          />\n          {errors.email && touched.email ? (\n            <ErrorMessage>{errors.email}</ErrorMessage>\n          ) : null}\n\n          <Field\n            as={CssTextField}\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            required\n          />\n          {errors.password && touched.password ? (\n            <ErrorMessage>{errors.password}</ErrorMessage>\n          ) : null}\n\n          <Button\n            disabled={isSubmitting}\n            variant=\"contained\"\n            type=\"submit\"\n            style={{\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              maxWidth: 150,\n              color: 'black',\n              backgroundColor: '#64ffda',\n              borderColor: '#00bfa5',\n            }}\n          >\n            {isSubmitting ? 'Submitting...' : 'Log In'}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\n// import { useDispatch } from 'react-redux';\n// import { logIn } from 'redux/auth/operations';\n// import { notCorrectLogIn } from '../Notification/Notification';\n// import { CssTextField, Title } from './LoginForm.styled';\n// import Button from '@mui/material/Button';\n// import Box from '@mui/material/Box';\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     const emailValue = form.elements.email.value;\n//     const passwordValue = form.elements.password.value;\n\n//     if (!emailValue || !passwordValue) {\n//       notCorrectLogIn();\n//       return;\n//     }\n//     dispatch(\n//       logIn({\n//         email: emailValue,\n//         password: passwordValue,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <>\n//       <Box\n//         component=\"form\"\n//         sx={{\n//           '& > :not(style)': { m: 1, width: '35ch' },\n//           display: 'flex',\n//           flexDirection: 'column',\n//           alignItems: 'center',\n//           maxWidth: 500,\n//           marginRight: 'auto',\n//           marginLeft: 'auto',\n//           padding: '20px',\n//           borderRadius: '4px',\n//           background: '#eeefe740',\n//           boxShadow:\n//             'rgba(0, 0, 0, 0.25) 0px 14px 28px, rgba(0, 0, 0, 0.22) 0px 10px 10px',\n//         }}\n//         noValidate\n//         autoComplete=\"off\"\n//         onSubmit={handleSubmit}\n//       >\n//         <Title>Log in to your account</Title>\n//         <CssTextField label=\"Email\" type=\"email\" name=\"email\" required />\n\n//         <CssTextField\n//           label=\"Password\"\n//           type=\"password\"\n//           name=\"password\"\n//           required\n//         />\n\n//         <Button\n//           variant=\"contained\"\n//           type=\"submit\"\n//           style={{\n//             color: 'black',\n//             backgroundColor: '#64ffda',\n//             borderColor: '#00bfa5',\n//             maxWidth: 120,\n//           }}\n//         >\n//           Log In\n//         </Button>\n//       </Box>\n//     </>\n//   );\n// };\n","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","Title","ErrorMessage","CssTextField","TextField","color","borderBottomColor","borderColor","validationSchema","Yup","shape","email","matches","required","password","min","LoginForm","dispatch","useDispatch","handleSubmit","values","resetForm","logIn","console","log","message","initialValues","onSubmit","errors","touched","isSubmitting","autoComplete","as","label","type","name","Button","disabled","variant","style","marginLeft","marginRight","maxWidth","backgroundColor","Login","Helmet"],"sourceRoot":""}